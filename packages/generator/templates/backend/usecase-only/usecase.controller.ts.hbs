import { {{ pascalCase usecase_name }}UseCase } from '@/app/usecases/{{ kebabCase usecase_name }}/{{ kebabCase usecase_name }}.usecase';
import { I{{ pascalCase usecase_name }}UseCase } from '@/domain/usecases/{{ kebabCase usecase_name }}/{{ kebabCase usecase_name }}.usecase.interface';
import { Public } from '@/infra/auth/public';
import { Body, Controller, Inject, Post, Get, Put, Delete } from '@nestjs/common';
import { ApiTags } from '@nestjs/swagger';
import { {{ pascalCase usecase_name }}InputDTO, {{ pascalCase usecase_name }}OutputDTO } from '../dtos/{{ kebabCase usecase_name }}.dto';

{{ public is_public_router }}
@ApiTags('{{ pascalCase usecase_name }}')
@Controller('{{ kebabCase usecase_name }}')
export class {{ pascalCase usecase_name }}Controller {
  constructor(
    @Inject({{ pascalCase usecase_name }}UseCase.name)
    private readonly {{ camelCase usecase_name }}UseCase: I{{ pascalCase usecase_name }}UseCase,
  ) {}

  {{ verbo selected_verbo }}
  async execute(@Body() { name }: {{ pascalCase usecase_name }}InputDTO): Promise<{{ pascalCase usecase_name }}OutputDTO> {
    const result = await this.{{ camelCase usecase_name }}UseCase.execute({ value: name });
    return { name: result };
  }
}
