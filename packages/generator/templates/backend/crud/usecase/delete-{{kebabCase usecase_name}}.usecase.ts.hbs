import { I{{ pascalCase usecase_name }}Repository } from '@/domain/protocols/database/repositories/{{ kebabCase usecase_name }}.repository.interface';
import { IDelete{{ pascalCase usecase_name }}UseCase } from '@/domain/usecases/{{ kebabCase usecase_name }}/delete-{{ kebabCase usecase_name }}.usecase.interface';
import { NotFoundException } from '@nestjs/common';

export class Delete{{ pascalCase usecase_name }}UseCase implements IDelete{{ pascalCase usecase_name }}UseCase {
  constructor(private readonly {{ camelCase usecase_name }}Repository: I{{ pascalCase usecase_name }}Repository) {}
  async execute(id: string): Promise<void> {
    const result = await this.{{ camelCase usecase_name }}Repository.find(id);

    if (!result) {
      throw new NotFoundException('{{ pascalCase usecase_name }} not found!');
    }

    await this.{{ camelCase usecase_name }}Repository.delete(id);
  }
}
