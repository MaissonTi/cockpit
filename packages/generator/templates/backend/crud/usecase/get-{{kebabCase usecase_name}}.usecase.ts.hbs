import { {{ pascalCase usecase_name }}Model } from '@/domain/models/{{ kebabCase usecase_name }}.model';
import { I{{ pascalCase usecase_name }}Repository } from '@/domain/protocols/database/repositories/{{ kebabCase usecase_name }}.repository.interface';
import { IGet{{ pascalCase usecase_name }}UseCase } from '@/domain/usecases/{{ kebabCase usecase_name }}/get-{{ kebabCase usecase_name }}.usecase.interface';

export class Get{{ pascalCase usecase_name }}UseCase implements IGet{{ pascalCase usecase_name }}UseCase {
  constructor(private readonly {{ camelCase usecase_name }}Repository: I{{ pascalCase usecase_name }}Repository) {}
  async execute(id: string): Promise<{{ pascalCase usecase_name }}Model> {
    return await this.{{ camelCase usecase_name }}Repository.find(id);
  }
}

